generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model AssistanceCatergory {
  id          Int          @id @default(autoincrement())
  name        String
  assistances Assistance[]
}

model Assistance {
  id                   Int                 @id @default(autoincrement())
  date                 DateTime
  observations         String
  assistanceCategoryId Int
  courseId             Int
  studentId            String
  qrId                 Int
  assistanceCategory   AssistanceCatergory @relation(fields: [assistanceCategoryId], references: [id])
  course               Course              @relation(fields: [courseId], references: [id])
  student              Student             @relation(fields: [studentId], references: [id])
  qr                   Qr                  @relation(fields: [qrId], references: [id])

  @@index([qrId])
}

model Student {
  id      String  @id
  name    String
  email   String
  faculty String?

  courses     CourseOnStudent[]
  device      Device?
  assistances Assistance[]
}

model Course {
  id          Int               @id @default(autoincrement())
  name        String
  section     Int
  classTotal  Int               @default(0)
  faculty     String
  semester    String
  professorId String
  professor   Professor         @relation(fields: [professorId], references: [id])
  students    CourseOnStudent[]
  qrs         Qr[]
  assistances Assistance[]
}

model CourseOnStudent {
  student     Student @relation(fields: [studentId], references: [id])
  studentId   String
  course      Course  @relation(fields: [courseId], references: [id])
  courseId    Int
  status      String  @default("Asignado")
  assistances Int     @default(0)

  @@id([studentId, courseId])
}

model DeviceOnQr {
  device   Device  @relation(fields: [deviceId], references: [id])
  deviceId String
  qr       Qr      @relation(fields: [qrId], references: [id])
  qrId     Int
  token    String  @unique
  used     Boolean @default(false)

  @@id([qrId, deviceId])
}

model Device {
  id        String       @id
  qrs       DeviceOnQr[]
  studentId String?      @unique
  student   Student?     @relation(fields: [studentId], references: [id])
}

model Professor {
  id      String   @id
  carnet  String
  name    String
  email   String
  courses Course[]
}

model Qr {
  id          Int          @id @default(autoincrement())
  limitDate   DateTime
  latitude    Float
  longitude   Float
  initDate    DateTime
  courseId    Int
  course      Course       @relation(fields: [courseId], references: [id])
  devices     DeviceOnQr[]
  assistances Assistance[]
}
